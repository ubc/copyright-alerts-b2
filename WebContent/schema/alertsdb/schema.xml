<schema name="alertsdb">
<comment>Defines tables used to store file copyright tagging status and coordinate file scanning.</comment>

<!-- 
Need to save space in table names, 30 char limit in Oracle, so ca stands for copyalerts.

Note that while you can add in foreign key relations to Blackboard tables, the practice seems to be discouraged in the API? There seems to be 
no way to get the raw primary key for entries. You have to manually parse the primary key out from the Id object's string representation.
-->

<!-- Stores copyright tagging status for each user and their files -->
<table name="ubc_ctlt_ca_files">
	<column name="pk1" data-type="int" nullable="false" identity="true" 
		comment="This is the primary key for the table, in Oracle it should be updated using the sequence ubc_ctlt_ca_files_seq which will be created automatically" />
	<column name="userid" data-type="varchar(255)" nullable="false" comment="userid responsible for file" />
	<column name="course" data-type="varchar(255)" nullable="false" comment="course which this file belongs to" />
	<!-- William mentioned that Bb stores path in full_path nvarchar2(2000 char), Note: Oracle db limits nvarchar to 4000 bytes max -->
	<column name="filepath" data-type="nvarchar(2000)" nullable="false" comment="identifies a file" />
	<primary-key name="ubc_ctlt_ca_files_pk1" comment="Unique primary key">
		<columnref name="pk1" />
	</primary-key>
</table>

<!-- Stores list of nodes running this building block -->
<table name="ubc_ctlt_ca_hosts">
	<column name="pk1" data-type="int" nullable="false" identity="true" 
		comment="This is the primary key for the table, in Oracle it should be updated using the sequence ubc_ctlt_ca_hosts_seq which will be created automatically" />
	<column name="host" data-type="varchar(255)" nullable="false" comment="the hostname of this node" />
	<column name="leader" data-type="char(1)" nullable="false" default="'0'" comment="whether this node is running the indexing job">
		<value-constraint name="ubc_leaderconstraintyn">
			<accepted-value value="0" />
			<accepted-value value="1" />
		</value-constraint>
	</column>
	<column name="status" data-type="varchar(255)" nullable="false" default="'stopped'" comment="whether the node is running the indexing job right now" />
	<column name="queue_offset" data-type="int" nullable="false" default="0" comment="how many files did the queue generator go through before stopping" />
	<column name="last_queue_fileid" data-type="int" nullable="false" default="0"
		comment="the id of the file last processed by the queue generator, if 0, then
		queue generator should start from beginning" />
	<column name="runstart" data-type="timestamp" default="''" comment="when did the indexing job start" />
	<column name="runend" data-type="timestamp" default="''" comment="when did the indexing job stop" />
	<!-- B2 config files are NOT reliably shared across nodes, so, as a quick fix, we'll just dump the config file in the db -->
	<column name="config" data-type="nvarchar(2000)" comment="stores building block configuration" />
	<primary-key name="ubc_ctlt_ca_hosts_pk1" comment="Unique primary key">
		<columnref name="pk1" />
	</primary-key>
</table>

<!-- Stores list of files yet to be processed in the current run -->
<table name="ubc_ctlt_ca_queue">
	<column name="pk1" data-type="int" nullable="false" identity="true" 
		comment="This is the primary key for the table, in Oracle it should be updated using the sequence ubc_ctlt_ca_queue_seq which will be created automatically" />
	<column name="filepath" data-type="nvarchar(1024)" nullable="false" comment="identifies a file" />
	<primary-key name="ubc_ctlt_ca_queue_pk1" comment="Unique primary key">
		<columnref name="pk1" />
	</primary-key>
</table>

</schema>
